'use strict';const ip_checker={tbody:document.querySelector('.ip_checker__table tbody'),resp_elm:document.querySelector('.ip_checker__resp'),form_elm:document.querySelector('.ip_checker__form'),err_elm:document.querySelector('.ip_checker__form .errors'),limit_elm:document.querySelector('.ip_checker__limit'),thead:['port','country','status','type','risk','last_seen'],init(){},reset(event){event.preventDefault();this.form_elm.style.display='block';this.resp_elm.style.display='none';this.limit_elm.style.display='none';this.form_elm.querySelector('textarea').value=''},on_submit(event,elm){event.preventDefault();const data=new FormData(elm);const qs=new URLSearchParams(data).toString();this.tbody.innerHTML='';fetch('/web_api/ip_checker/check?'+qs).then(response=>{if(response.status==200)
return response.json();return this.build_error(response.status)}).then(resp=>{if(!resp)
return;if(resp.error){this.err_elm.innerHTML='';return this.err_elm.append(this.build_req_limit())}
let sent_ips=[...new Set(data.get('ips').split('\n'))].filter(ip=>ip);sent_ips.forEach(ip=>this.build_row(resp[ip],ip));this.form_elm.style.display='none';this.resp_elm.style.display='flex'}).catch(e=>console.log(e))},build_error(){this.form_elm.style.display='none';this.resp_elm.style.display='none';this.limit_elm.style.display='block';return!1},build_req_limit(){const li=document.createElement('li');li.classList.add('mb-2');li.innerHTML='Please make sure your request contain no more than '+'100 IPs';return li},build_row(data,ip){const row=document.createElement('tr');let col=document.createElement('td');col.classList.add('p-1');col.innerHTML=ip;row.append(col);this.thead.forEach(k=>{col=document.createElement('td');col.classList.add('p-1');if(k=='status'&&data&&data[k])
col.classList.add('success');else if(k=='status')
col.classList.add('failed');col.innerHTML=data&&data[k]?data[k]:k=='status'?'FAILED':'N/A';row.append(col)});this.tbody.append(row)}};ip_checker.init()